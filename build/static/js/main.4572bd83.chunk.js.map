{"version":3,"sources":["assets/radio-empty.svg","assets/play2.svg","assets/list.svg","assets/chart.svg","assets/music.svg","assets/play.svg","assets/stop.svg","assets/add.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","placeholder","role","alt","src","add","radioEmpty","play2","href","play","stop","list","chart","music","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4572bd83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/radio-empty.bee0153c.svg\";","module.exports = __webpack_public_path__ + \"static/media/play2.be6ebe74.svg\";","module.exports = __webpack_public_path__ + \"static/media/list.be87d4bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/chart.a8fd2722.svg\";","module.exports = __webpack_public_path__ + \"static/media/music.1dfeb00b.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.852c172a.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.15863fc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.860f7b82.svg\";","import React from 'react';\n// import logo from './logo.svg';\nimport './App.scss';\nimport list from './assets/list.svg';\nimport chart from './assets/chart.svg';\nimport music from './assets/music.svg';\nimport play from './assets/play.svg';\nimport play2 from './assets/play2.svg';\nimport stop from './assets/stop.svg';\nimport add from './assets/add.svg';\nimport radioEmpty from './assets/radio-empty.svg';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App_leftCol\">\n        <div className=\"leftCol_addItemBlock\">\n          <input className=\"addItemBlock_input\" placeholder=\"add a new missionâ€¦\" />\n          <div className=\"addItemBlock_addBtn\" role=\"button\"><img alt=\"\" src={add} /></div>\n        </div>\n        <div className=\"leftCol_currentItemBlock\">\n          <div>\n            <div className=\"currentItemBlock_item\">\n              <div className=\"item_check\"><img alt=\"\" src={radioEmpty} /></div>\n              <div className=\"item_content\">\n                <h2>the First thing to do today</h2>\n                <div><img alt=\"\" src={radioEmpty} /></div>\n              </div>\n            </div>\n            <h2 className=\"currentItemBlock_time\">25:00</h2>\n          </div>\n\n        </div>\n        <div className=\"leftCol_itemsListBlock\">\n          <div>\n            <div className=\"itemListBlock_listItem\">\n              <div className=\"listItem_checkbox\"><img alt=\"\" src={radioEmpty} /></div>\n              <div className=\"listItem_title\">the second thing to do today</div>\n              <div className=\"listItem_playBtn\"><img alt=\"\" src={play2} /></div>\n            </div>\n            <div className=\"itemListBlock_listItem\">\n              <div className=\"listItem_checkbox\"><img alt=\"\" src={radioEmpty} /></div>\n              <div className=\"listItem_title\">the third thing to do today</div>\n              <div className=\"listItem_playBtn\"><img alt=\"\" src={play2} /></div>\n            </div>\n            <div className=\"itemListBlock_listItem\">\n              <div className=\"listItem_checkbox\"><img alt=\"\" src={radioEmpty} /></div>\n              <div className=\"listItem_title\">the forth thing to do today</div>\n              <div className=\"listItem_playBtn\"><img alt=\"\" src={play2} /></div>\n            </div>\n          </div>\n          <a className=\"itemListBlock_moreLink\" href=\"/\">MORE</a>\n        </div>\n      </div>\n      <div className=\"App_centerCol\">\n        <div className=\"centerCol_circle\">\n          <div className=\"circle_actBtnBlock\">\n            <div className=\"actBtnBlock_playBtn\" role=\"button\"><img alt=\"\" src={play} /></div>\n            <div className=\"actBtnBlock_stopBtn\" role=\"button\"><img alt=\"\" src={stop} /></div>\n          </div>\n        </div>\n      </div>\n      <nav className=\"App_rightCol\">\n        <div className=\"rightCol_topBlock\">\n          <div className=\"topBlock_btn\" role=\"button\"><img alt=\"\" src={list} /></div>\n          <div className=\"topBlock_btn\" role=\"button\"><img alt=\"\" src={chart} /></div>\n          <div className=\"topBlock_btn\" role=\"button\"><img alt=\"\" src={music} /></div>\n        </div>\n        <div className=\"rightCol_bottomBlock\">\n          <h1>POMODORO</h1>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}